---
title: "Traffic Crashes EDA"
format: html
editor: source
---

```{r}
#| label: data-tidying
#| warning: false
# reading in data
library(tidyverse)
traffic <- read_csv("data/raw/traffic_crashes.csv") |>
  janitor::clean_names() 

# convert appropriate variables to factor
convert_to_factor <- c("traffic_control_device", 
                       "device_condition", 
                       "weather_condition", 
                       "lighting_condition",
                       "first_crash_type", 
                       "trafficway_type",
                       "alignment",
                       "roadway_surface_cond",
                       "road_defect",
                       "report_type",
                       "crash_type",
                       "damage",
                       "prim_contributory_cause",
                       "sec_contributory_cause",
                       "work_zone_type",
                       "most_severe_injury"
                       )
for(var in convert_to_factor){
  traffic <- traffic |> 
    mutate({{var}} := as.factor(!!sym(var)))
  }

# convert appropriate variables to boolean
convert_to_bool <- traffic |> select((ends_with("_i"))) |> colnames()

for(var in convert_to_bool){
  traffic <- traffic |> 
    mutate({{var}} := if_else(!!sym(var) == "Y", TRUE, FALSE, missing = NA))
  }

# convert appropriate variables to datetime
convert_to_datetime <- c("crash_date", "date_police_notified")

for(var in convert_to_datetime){
  traffic <- traffic |> 
    mutate({{var}} := parse_date_time(!!sym(var), orders = "%m/%d/%Y %I:%M:%S %p"))
  }
```
## Numeric plots
```{r}
#| label: num-plots
#numeric_plots <- c("crash_hour", "crash_week", "crash_month", "injuries_no_indication", "injuries_unknown", "num_units")
#traffic_no_id <- traffic |> 
#  select(-crash_record_id, -rd_no, -(street_no:street_name), -(latitude:location), -beat_of_occurrence)

for (var in colnames(traffic)) {
  if (class(traffic[[{{var}}]]) == "factor"){
     label <- rlang::englue("A barchart of {{var}}")
     factor_plot <- 
       ggplot(traffic, aes(x = !!sym(var))) +
       geom_bar() +
       theme_minimal() +
       labs(title = label)
     ggsave(paste(var, "_distribution.png", sep = ""),
            factor_plot,
            path = "./plots")
     }
  else if (class(traffic[[{{var}}]]) == "numeric") {
    label <- rlang::englue("A histogram of {{var}}")
    numeric_plot <- 
      ggplot(traffic, aes(x = !!sym(var))) +
      geom_histogram(bins = 20)
    ggsave(paste(var, "_distribution.png", sep = ""), 
           numeric_plot,
           path = "./plots")
    }
  else{NULL}
}

```

## Factor plots

## Datetime plots
```{r}
#| label: datetime-plots

```

